/*
 * Copyright (c) 2010-2010 LinkedIn, Inc
 * Portions Copyright (c) 2013 Yan Pujante
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

/**
 * Repositories for build
 */
allRepositories.build = {
  mavenCentral()
}

def topReleaseDir = userConfig.top.release.dir ?: "${topBuildDir}/release"

/**
 * Repositories for release (local)
 */
allRepositories.snapshotRelease = {
  ivy {
    name = "local-release"
    url = topReleaseDir
    layout 'maven'
  }
}

// non snapshot releases in the same repo
allRepositories.release = allRepositories.snapshotRelease

def topPublishDir = userConfig.top.publish.dir ?: "${topBuildDir}/publish"

def pomConfig = { pomToConfigure ->
  pomToConfigure.project {
    name project.name
    description 'A useful set of gradle plugins'
    url 'http://github.com/pongasoft/gradle-plugins'
    licenses {
      license {
        name 'The Apache Software License, Version 2.0'
        url 'http://www.apache.org/licenses/LICENSE-2.0'
      }
    }
    developers {
      developer {
        id 'ypujante'
        name 'Yan Pujante'
        email 'yan@pongasoft.com'
      }
    }
    scm {
      connection "scm:git:${spec.scmUrl}"
      developerConnection "scm:git:${spec.scmUrl}"
      url spec.scmUrl
    }
  }
}

/**
 * Repositories for publish (snapshots are published locally)
 */
allRepositories.snapshotPublish = {
  mavenDeployer {
    repository(url: "file://localhost${topPublishDir}")
    pom.whenConfigured(pomConfig)
  }
}

///**
// * Bintray binaries / maven style
// */
//allRepositories.binaries = bintray.binaries.mavenRepo {
//  pom.whenConfigured(pomConfig)
//}
//
///**
// * Bintray distributions (note that there are no distributions in this project... used for testing
// * only (see test-2)
// */
////allRepositories.distributions = bintray.distributions.ivyRepo()
//
//// by default all modules are published into bintray.binaries (can be overriden in a given module)
//allRepositories.publish = allRepositories.binaries
